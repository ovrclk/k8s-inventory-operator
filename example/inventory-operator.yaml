apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory-operator
  namespace: akash-services
  labels:
    akash.network: "true"
    app.kubernetes.io/name: akash
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: operator
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: inventory-operator
  labels:
    akash.network: "true"
    app.kubernetes.io/name: akash
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: operator
rules:
  - apiGroups:
      - ''
    resources:
      - namespaces
      - nodes
      - pods
      - events
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - pods/exec
    verbs:
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ceph.rook.io
    resources:
      - cephclusters
      - cephblockpools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - akash.network
    resources:
      - inventoryrequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - akash.network
    resources:
      - inventories
    verbs:
      - create
      - patch
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: inventory-operator
  labels:
    akash.network: "true"
    app.kubernetes.io/name: akash
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: inventory-operator
subjects:
  - kind: ServiceAccount
    name: inventory-operator
    namespace: akash-services
---
apiVersion: v1
kind: Service
metadata:
  labels:
    akash.network: "true"
    app.kubernetes.io/name: akash
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: operator
  name: inventory-operator
  namespace: akash-services
spec:
  type: ClusterIP
  ports:
    - name: api
      port: 8080
      targetPort: api
      appProtocol: http
  selector:
    app.kubernetes.io/name: akash
    app.kubernetes.io/instance: inventory
    app.kubernetes.io/component: operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-operator
  namespace: akash-services
  labels:
    akash.network: "true"
    operator: akash
    storage-backend : ceph
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: akash
      app.kubernetes.io/instance: inventory
      app.kubernetes.io/component: operator
  replicas: 1
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: inventory-operator
        app.kubernetes.io/name: akash
        app.kubernetes.io/instance: inventory
        app.kubernetes.io/component: operator
    spec:
      serviceAccountName: inventory-operator
      containers:
        - name: inventory-operator
          image: ghcr.io/ovrclk/k8s_inventory_operator
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
